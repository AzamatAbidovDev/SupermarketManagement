@page "/cashier_console"
@attribute [Authorize(Policy = "CashierOnly")]

@if (!string.IsNullOrWhiteSpace(cashierName))
{
    <div class="wrapper">       
        <div class="row">
            <div class="col-7">
                <h4 style="color: white">CASHIER'S CONSOLE</h4>
            </div>
            <div class="col-2">
                <label for="cashier" style="font-weight: 600; font-size:22px; color: white">CASHIER NAME: </label>
            </div>
            <div class="col-3">
                <div class="form-group">
                    <input type="text" id="cashier" class="form-control" @bind-value="cashierName" />
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-6">
                <SelectProductsForSelling OnProductSelected="SelectProduct" CashierName="@cashierName"
                                          SelectedProduct="selectedProduct" OnProductSold="SellProduct" />
            </div>
            <div class="col">
                <br />
                <TodayTransactionsComponent @ref="transactionsComponent" />
            </div>
        </div>
    </div>
}

@code {

    Product selectedProduct;
    string cashierName;
    TodayTransactionsComponent transactionsComponent;

    [CascadingParameter] private Task<AuthenticationState> _authState { get; set; }
    AuthenticationState authState;

    protected override async Task OnInitializedAsync()
    {
        authState = await _authState;
        cashierName = authState.User.Identity.Name;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
            transactionsComponent.LoadTransactions(cashierName);
        StateHasChanged();
    }

    void SelectProduct(Product product)
    {
        selectedProduct = product;
    }
    void SellProduct(Product product)
    {
        transactionsComponent.LoadTransactions(cashierName);
    }

}
