@inject IViewCategoriesUseCase viewCategoriesUseCase
@inject IViewProductsByCategoryID viewProductsByCategoryID

<div class="form-group">
    <label for="category" style="font-weight: 600; color: #cdcdcd">CATEGORY</label>
    <select id="category" @bind="SelectedCategoryId" class="form-control">
        <option selected></option>
        @foreach (var item in categories)
        {
            <option value="@item.CategoryID">@item.Name</option>
        }
    </select>
</div>

@if(productsInCategory != null)
{
    <table class="table" style="color: white; font-size: 22px">
        <thead>
            <tr style="color: #cdcdcd; font-size: 21px">
                <th>Name</th>
                <th>Quantity</th>
                <th>Unit</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in productsInCategory)
            {
                <tr @onclick="@(()=>OnSelectProduct(item))"
                    style="@(item.ProductID == selectedProductId? "color: white; font-weight:600; font-size: 25px; cursor:pointer;":"cursor:pointer")">
                    <td>@item.Name</td>
                    <td>@item.Quantity</td>
                    <td>@item.Unit</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    IEnumerable<Product> productsInCategory;
    [Parameter] public EventCallback<Product> OnProductSelected { get; set; }

    int selectedProductId;
    int selectedCategoryId;
    int SelectedCategoryId
    {
        get { return selectedCategoryId; }
        set
        {
            selectedCategoryId = value;
            productsInCategory = viewProductsByCategoryID.Execute(value);
            OnSelectProduct(null);
            StateHasChanged();
        }
    }

    IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        categories = viewCategoriesUseCase.Execute();

    }

    void OnSelectProduct(Product product)
    {
        OnProductSelected.InvokeAsync(product);
        if(product != null)
            selectedProductId = product.ProductID;
    }
}
