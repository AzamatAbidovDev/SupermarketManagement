@page "/products"
@attribute [Authorize(Policy = "AdminOnly")]

@inject IViewProductsUseCase viewProductsUseCase
@inject IGetCategoryByIDUseCase getCategoryByIDUseCase
@inject IDeleteProductUseCase deleteProductUseCase
@inject NavigationManager navManager

<div class="wrapper">
    <h3 style="color: white">MANAGE PRODUCTS</h3>
    <br />
    @if (products != null)
    {
        <Table Size="@TableSize.Middle"
               Bordered
               DataSource="@products">
            <ActionColumn Class="table-size-category" Title="Category"><a>@getCategoryByIDUseCase.Execute(context.CategoryID.Value).Name</a></ActionColumn>
            <PropertyColumn Class="table-size" TItem="Product" TProp="string" Title="Name" Property="x=>x.Name" />
            <PropertyColumn Class="table-size-category" TItem="Product" TProp="double?" Title="Price" Property="x=>x.Price.Value" />
            <PropertyColumn Class="table-size-category" TItem="Product" TProp="double?" Title="Quantity" Property="x=>x.Quantity.Value" />
            <PropertyColumn Class="table-size-category" TItem="Product" TProp="string" Title="Unit" Property="x=>x.Unit" />
            <ActionColumn Width="130">
                <Space>
                    <SpaceItem><Button Type="button" Size="@ButtonSize.Large" Style="background-color: darkslategray; color: white" OnClick="()=>OnClickEdit(context)">Edit</Button></SpaceItem>  
                    <SpaceItem><Button Type="button" Size="@ButtonSize.Large" Style="background-color: red; color: white" OnClick="()=>DeleteProduct(context)">Delete</Button></SpaceItem>
                </Space>
            </ActionColumn>
        </Table>

        <Confirmation @ref="confirmation" onCancel="OnCancel" onConfirm="OnConfirm">
            <div style="font-size: 24px; font-weight: 600; color: darkblue">Do you want to delete <span style="color: darkred">@productToBeDeleted.Name.ToUpper()</span>?</div>
        </Confirmation>
    }
    <br />
    <Button Type="button" Size="@ButtonSize.Large" Style="background-color: blue; color: white" OnClick="OnClickAdd">Add Product</Button>
</div>

@code {

    IEnumerable<Product> products;
    Product productToBeDeleted;

    Confirmation confirmation;

    protected override void OnInitialized()
    {
        LoadProducts();
    }

    void OnClickAdd()
    {
        navManager.NavigateTo("/addproduct");
    }
    void OnClickEdit(Product product)
    {
        navManager.NavigateTo($"/editproduct/{product.ProductID}");
    }
    void LoadProducts()
    {
        products = viewProductsUseCase.Execute()?.ToList();
    }
    void DeleteProduct(Product product)
    {
        productToBeDeleted = product;
        confirmation.Show();
    }
    void OnConfirm()
    {
        deleteProductUseCase.Delete(productToBeDeleted);
        LoadProducts();

        confirmation.Hide();
        productToBeDeleted = null;
    }
    void OnCancel()
    {
        confirmation.Hide();
        productToBeDeleted = null;
    }
}
