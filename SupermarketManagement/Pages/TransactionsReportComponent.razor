@page "/transactions"
@attribute [Authorize(Policy = "AdminOnly")]

@inject IGetTransactionsUseCase getTransactionsUseCase
@inject IJSRuntime jsRuntime

<div class="wrapper">
    <div class="row">
        <div class="col-3">
            <label for="cashier" style="font-weight: 600; color: white">CASHIER NAME</label>
            <input type="text" id="cashier" class="form-control" @bind-value="cashierName" />
        </div>
        <div class="col-3">
            <label for="startdate" style="font-weight: 600; color: white">START DATE</label>
            <input type="date" id="startdate" class="form-control" @bind-value="startDate" />
        </div>
        <div class="col-3">
            <label for="enddate" style="font-weight: 600; color: white">END DATE</label>
            <input type="date" id="enddate" class="form-control" @bind-value="endDate" />
        </div>
        <div class="col-2 mt-auto">
            <button type="button" class="btn btn-secondary mr-2" @onclick="LoadTransactions">Search</button>
            <button type="button" class="btn btn-secondary" @onclick="Print"><i class="fa-sharp fa-solid fa-print"></i></button>
        </div>
    </div>
    <br />

    @if (transactions != null)
    {
        <div id="printarea">
            <Table Bordered TableLayout="fixed"
                   Size="@TableSize.Middle"               
                   DataSource="@transactions"
                   >
                <PropertyColumn Class="table-size" TItem="Transaction" TProp="string" Title="Date Time" Property="@(x=>x.TimeStamp.ToString("yyyy-MM-dd"))" />
                <PropertyColumn Class="table-size" TItem="Transaction" TProp="string" Title="Product" Property="x=>x.ProductName" />
                <PropertyColumn Class="table-size" TItem="Transaction" TProp="double" Title="Qty Before" Property="x=>x.BeforeQty" />
                <PropertyColumn Class="table-size" TItem="Transaction" TProp="double" Title="Qty Sold" Property="x=>x.SoldQty" />
                <PropertyColumn Class="table-size" TItem="Transaction" TProp="string" Title="Unit" Property="x=>x.Unit" />
                <PropertyColumn Class="table-size" TItem="Transaction" TProp="double" Title="Sold Amt" Property="x=>x.SoldQty*x.Price" Style="text-align: right" />
            </Table>
        </div>
    }
</div>

@code {

    string cashierName;
    DateTime startDate;
    DateTime endDate;

    IEnumerable<Transaction> transactions;

    protected override void OnInitialized()
    {
        startDate = DateTime.Today;
        endDate = DateTime.Today;
    }

    void LoadTransactions()
    {
        transactions = getTransactionsUseCase.Execute(cashierName, startDate, endDate);
    }
    void Print()
    {
        jsRuntime.InvokeVoidAsync("print");
    }
}
