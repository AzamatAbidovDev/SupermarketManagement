@page "/categories"
@attribute [Authorize(Policy = "AdminOnly")]

@inject IViewCategoriesUseCase iViewCategories
@inject IDeleteCategoryUseCase deleteCategoryUseCase
@inject NavigationManager navManager

<div class="wrapper">

    <h3 style="color: white">MANAGE CATEGORIES</h3>
    <br />

    @if (categories != null)
    {
        <Table Size="@TableSize.Middle"
               Bordered
               DataSource="@categories">
            <PropertyColumn Class="table-size" TItem="Category" TProp="string" Title="Name" Property="x=>x.Name" />
            <PropertyColumn Class="table-size-category" TItem="Category" TProp="string" Title="Description" Property="x=>x.Description" />
            <ActionColumn>
                <Space>
                    <SpaceItem><Button Type="button" Size="@ButtonSize.Large" Style="background-color: darkslategray; color: white" OnClick="()=>OnClickEdit(context)">Edit</Button></SpaceItem>
                    <SpaceItem><Button Type="button" Size="@ButtonSize.Large" Style="background-color: red; color: white" OnClick="()=>DeleteCategory(context)">Delete</Button></SpaceItem>
                </Space>
            </ActionColumn>
        </Table>

        <Confirmation @ref="confirmation" onCancel="OnCancel" onConfirm="OnConfirm">
            <div style="font-size: 24px; font-weight: 600; color: darkblue">Do you want to delete <span style="color: darkred">@categoryToBeDeleted.Name.ToUpper()</span>?</div>
        </Confirmation>
    }

    <br />
    <Button Type="button" Size="@ButtonSize.Large" Style="background-color: blue; color: white" OnClick="OnClickAdd">Add Category</Button>
</div>

@code {

    List<Category> categories;
    Category categoryToBeDeleted;

    Confirmation confirmation;

    protected override void OnInitialized()
    {
        LoadCategories();
    }

    void OnClickAdd()
    {
        navManager.NavigateTo("/addcategory");
    }
    void OnClickEdit(Category category)
    {
        navManager.NavigateTo($"/editcategory/{category.CategoryID}");
    }
    void DeleteCategory(Category category)
    {
        categoryToBeDeleted = category;
        confirmation.Show();
    }
    void OnConfirm()
    {
        deleteCategoryUseCase.Delete(categoryToBeDeleted);
        LoadCategories();

        confirmation.Hide();
        categoryToBeDeleted = null;
    }
    void OnCancel()
    {
        confirmation.Hide();
        categoryToBeDeleted = null;
    }
    void LoadCategories()
    {
        categories = iViewCategories.Execute()?.ToList();
    }
}
