@page "/editproduct/{productId}"
@attribute [Authorize(Policy = "AdminOnly")]

@inject NavigationManager navManager
@inject IEditProductUseCase editProductUseCase
@inject IGetProductByIDUseCase getProductByIDUseCase
@inject IViewCategoriesUseCase viewCategoriesUseCase

<div class="wrapper">
    <h3 style="color: white">Edit Product</h3>
    <br />

    @if (product != null)
    {
        <Form Model="product"
              LabelColSpan="32"
              WrapperColSpan="40">
            <FormItem Label="Name" LabelStyle="font-weight: 600; color: #cdcdcd; font-size: 30px">
                <Input @bind-Value="context.Name" Size="@InputSize.Large" />
            </FormItem>
            <FormItem Label="Category" LabelStyle="font-weight: 600; color: #cdcdcd; font-size: 30px">
                <Select Mode="default" DataSource="categories" Placeholder="Select a category" Size="@InputSize.Large"
                        @bind-Value="context.CategoryID" LabelName="@nameof(Category.Name)" ValueName="@nameof(Category.CategoryID)">
                </Select>
            </FormItem>
            <FormItem Label="Price" LabelStyle="font-weight: 600; color: #cdcdcd; font-size: 30px">
                <AntDesign.InputNumber @bind-Value="context.Price" @bind-Value:format="F2" Size="@InputSize.Large" />
            </FormItem>
            <FormItem Label="Quantity" LabelStyle="font-weight: 600; color: #cdcdcd; font-size: 30px">
                <AntDesign.InputNumber @bind-Value="context.Quantity" Size="@InputSize.Large" />
            </FormItem>
            <FormItem Label="Unit" LabelStyle="font-weight: 600; color: #cdcdcd; font-size: 30px">
                <Input @bind-Value="context.Unit" Size="@InputSize.Large" />
            </FormItem>
            <FormItem>
                <Button Type="button" Style="@ButtonType.Primary" Size="@ButtonSize.Large" OnClick="OnValidSumit">
                    Save
                </Button>
                <Button Type="button" Style="background-color: darkslategray; color: white" Size="@ButtonSize.Large" OnClick="OnCancel">
                    Cancel
                </Button>
            </FormItem>
        </Form>
    }
</div>

@code {

    [Parameter] public string ProductId { get; set; }
    Product product;

    IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        categories = viewCategoriesUseCase.Execute();
    }

    protected override void OnParametersSet()
    {
        if (int.TryParse(this.ProductId, out int iProductId))
        {
            var cat = getProductByIDUseCase.Execute(iProductId);
            this.product = new Product
            {
                ProductID = cat.ProductID,
                Name = cat.Name,
                CategoryID = cat.CategoryID,
                Price = cat.Price,
                Quantity = cat.Quantity,
                Unit = cat.Unit
            };
        }
    }

    private void OnValidSumit()
    {
        editProductUseCase.Execute(this.product);
        navManager.NavigateTo("/products");
    }
    private void OnCancel()
    {
        navManager.NavigateTo("/products");
    }
}
