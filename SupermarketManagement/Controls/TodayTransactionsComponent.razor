@inject IGetTodayTransactionsUseCase getTodayTransactionsUseCase
@inject IGetProductByIDUseCase getProductByIDUseCase
@inject IViewProductsUseCase viewProductsUseCase

@if (transactions != null)
{
    <table class="table">
        <thead>
            <tr style="color: #cdcdcd; font-size: 21px">
                <th>Date Time</th>
                <th>Product</th>
                <th>Price</th>
                <th>SoldQty</th>
                <th>Unit</th>
                <th>Sold Amt</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in transactions)
            {
                <tr style="color: white; font-size: 20px">
                    <td>@item.TimeStamp.ToString("MM/dd hh:mm")</td>
                    <td>@item.ProductName</td>
                    <td>@item.Price</td>
                    <td><button type="button" style="font-size: 10px" class="btn btn-secondary"><i class="fa-solid fa-minus"></i></button>@item.SoldQty<button type="button" style="font-size: 10px" class="btn btn-secondary"><i class="fa-solid fa-plus"></i></button></td>
                    <td>@item.Unit</td>
                    <td>@(item.SoldQty * item.Price) UZS</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    IEnumerable<Transaction> transactions;

    public void LoadTransactions(string cashierName)
    {
        transactions = getTodayTransactionsUseCase.Execute(cashierName);

        StateHasChanged();
    }
}
